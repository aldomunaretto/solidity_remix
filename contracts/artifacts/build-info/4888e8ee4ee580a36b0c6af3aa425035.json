{
	"id": "4888e8ee4ee580a36b0c6af3aa425035",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SafeExchange.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\n// Intercambio de ERC721 por una cantidad x de un ERC20 (StableCooin USDC)\r\n// Compra-Venta de un NFT, vendedor (NFT) y comprador (ERC20)\r\n// Se emitirá un evento al cerrarse la compra-venta\r\n// Montamos un contrato que despliega vendedor(owner) y cualquiera puede comprar con el precio establecido\r\n// El ERC20 será un token que desplegamos nosotros y se usará su dirección en el momento del despliegue del contrato de compra-venta\r\n// Tras desplegar el contrato, le daremos el allowance \r\n\r\npragma solidity ^0.8.22;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\n\r\ncontract SafeExchange {\r\n\r\n    address public seller;\r\n    uint256 public price; // Cantidad del ERC20 para poder comprar el NFT\r\n    address public erc20TokenAddress; //Dirección del token (por ejemplo USDC)\r\n    address public erc721TokenAddress; //Dirección del contrato del NFT\r\n    uint256 public erc721TokenId; // ID del NFT dentro del contrato ERC721\r\n\r\n    constructor (uint256 _price, address _erc20TokenAddress, address _erc721TokenAddress, uint256 _erc721TokenId) {\r\n        seller = msg.sender;\r\n        price = _price;\r\n        erc20TokenAddress = _erc20TokenAddress;\r\n        erc721TokenAddress = _erc721TokenAddress;\r\n        erc721TokenId = _erc721TokenId;\r\n    } \r\n\r\n    function executeTrade() public {\r\n        IERC20 erc20Token = IERC20(erc20TokenAddress);\r\n        IERC721 erc721Token = IERC721(erc721TokenAddress);\r\n        \r\n        bool erc20TransferSuccessful = erc20Token.transferFrom(msg.sender, seller, price);\r\n        require(erc20TransferSuccessful, \"ERC20 transfer not successful. Remember that you must have sufficient funds and make the minimum allowance for the price of this contract.\");\r\n\r\n        erc721Token.transferFrom(seller, msg.sender, erc721TokenId);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeExchange.sol": {
				"SafeExchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_erc20TokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_erc721TokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_erc721TokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "erc20TokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc721TokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc721TokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "executeTrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "seller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeExchange.sol\":680:1887  contract SafeExchange {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SafeExchange.sol\":1047:1361  constructor (uint256 _price, address _erc20TokenAddress, address _erc721TokenAddress, uint256 _erc721TokenId) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SafeExchange.sol\":1177:1187  msg.sender */\n  caller\n    /* \"contracts/SafeExchange.sol\":1168:1174  seller */\n  0x00\n  dup1\n    /* \"contracts/SafeExchange.sol\":1168:1187  seller = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SafeExchange.sol\":1206:1212  _price */\n  dup4\n    /* \"contracts/SafeExchange.sol\":1198:1203  price */\n  0x01\n    /* \"contracts/SafeExchange.sol\":1198:1212  price = _price */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SafeExchange.sol\":1243:1261  _erc20TokenAddress */\n  dup3\n    /* \"contracts/SafeExchange.sol\":1223:1240  erc20TokenAddress */\n  0x02\n  0x00\n    /* \"contracts/SafeExchange.sol\":1223:1261  erc20TokenAddress = _erc20TokenAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SafeExchange.sol\":1293:1312  _erc721TokenAddress */\n  dup2\n    /* \"contracts/SafeExchange.sol\":1272:1290  erc721TokenAddress */\n  0x03\n  0x00\n    /* \"contracts/SafeExchange.sol\":1272:1312  erc721TokenAddress = _erc721TokenAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SafeExchange.sol\":1339:1353  _erc721TokenId */\n  dup1\n    /* \"contracts/SafeExchange.sol\":1323:1336  erc721TokenId */\n  0x04\n    /* \"contracts/SafeExchange.sol\":1323:1353  erc721TokenId = _erc721TokenId */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SafeExchange.sol\":1047:1361  constructor (uint256 _price, address _erc20TokenAddress, address _erc721TokenAddress, uint256 _erc721TokenId) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/SafeExchange.sol\":680:1887  contract SafeExchange {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_11:\n    /* \"#utility.yul\":490:514   */\n  tag_23\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_24:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_12:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_26\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_11\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_13:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_14:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_29\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_15:\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_32:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_16:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2025   */\ntag_3:\n    /* \"#utility.yul\":1302:1308   */\n  0x00\n    /* \"#utility.yul\":1310:1316   */\n  dup1\n    /* \"#utility.yul\":1318:1324   */\n  0x00\n    /* \"#utility.yul\":1326:1332   */\n  dup1\n    /* \"#utility.yul\":1375:1378   */\n  0x80\n    /* \"#utility.yul\":1363:1372   */\n  dup6\n    /* \"#utility.yul\":1354:1361   */\n  dup8\n    /* \"#utility.yul\":1350:1373   */\n  sub\n    /* \"#utility.yul\":1346:1379   */\n  slt\n    /* \"#utility.yul\":1343:1463   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1382:1461   */\n  tag_37\n  tag_8\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1343:1463   */\ntag_36:\n    /* \"#utility.yul\":1502:1503   */\n  0x00\n    /* \"#utility.yul\":1527:1591   */\n  tag_38\n    /* \"#utility.yul\":1583:1590   */\n  dup8\n    /* \"#utility.yul\":1574:1580   */\n  dup3\n    /* \"#utility.yul\":1563:1572   */\n  dup9\n    /* \"#utility.yul\":1559:1581   */\n  add\n    /* \"#utility.yul\":1527:1591   */\n  tag_12\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1517:1591   */\n  swap5\n  pop\n    /* \"#utility.yul\":1473:1601   */\n  pop\n    /* \"#utility.yul\":1640:1642   */\n  0x20\n    /* \"#utility.yul\":1666:1730   */\n  tag_39\n    /* \"#utility.yul\":1722:1729   */\n  dup8\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1702:1711   */\n  dup9\n    /* \"#utility.yul\":1698:1720   */\n  add\n    /* \"#utility.yul\":1666:1730   */\n  tag_16\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1656:1730   */\n  swap4\n  pop\n    /* \"#utility.yul\":1611:1740   */\n  pop\n    /* \"#utility.yul\":1779:1781   */\n  0x40\n    /* \"#utility.yul\":1805:1869   */\n  tag_40\n    /* \"#utility.yul\":1861:1868   */\n  dup8\n    /* \"#utility.yul\":1852:1858   */\n  dup3\n    /* \"#utility.yul\":1841:1850   */\n  dup9\n    /* \"#utility.yul\":1837:1859   */\n  add\n    /* \"#utility.yul\":1805:1869   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1795:1869   */\n  swap3\n  pop\n    /* \"#utility.yul\":1750:1879   */\n  pop\n    /* \"#utility.yul\":1918:1920   */\n  0x60\n    /* \"#utility.yul\":1944:2008   */\n  tag_41\n    /* \"#utility.yul\":2000:2007   */\n  dup8\n    /* \"#utility.yul\":1991:1997   */\n  dup3\n    /* \"#utility.yul\":1980:1989   */\n  dup9\n    /* \"#utility.yul\":1976:1998   */\n  add\n    /* \"#utility.yul\":1944:2008   */\n  tag_12\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1934:2008   */\n  swap2\n  pop\n    /* \"#utility.yul\":1889:2018   */\n  pop\n    /* \"#utility.yul\":1205:2025   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"contracts/SafeExchange.sol\":680:1887  contract SafeExchange {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeExchange.sol\":680:1887  contract SafeExchange {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x08551a53\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7239c5ea\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa035b1fe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xdf241cb9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe0c70b66\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf835cd3c\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SafeExchange.sol\":711:732  address public seller */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SafeExchange.sol\":969:997  uint256 public erc721TokenId */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SafeExchange.sol\":739:759  uint256 public price */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SafeExchange.sol\":895:928  address public erc721TokenAddress */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SafeExchange.sol\":1370:1884  function executeTrade() public {... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/SafeExchange.sol\":814:846  address public erc20TokenAddress */\n    tag_8:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SafeExchange.sol\":711:732  address public seller */\n    tag_10:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SafeExchange.sol\":969:997  uint256 public erc721TokenId */\n    tag_14:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/SafeExchange.sol\":739:759  uint256 public price */\n    tag_18:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/SafeExchange.sol\":895:928  address public erc721TokenAddress */\n    tag_21:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SafeExchange.sol\":1370:1884  function executeTrade() public {... */\n    tag_24:\n        /* \"contracts/SafeExchange.sol\":1412:1429  IERC20 erc20Token */\n      0x00\n        /* \"contracts/SafeExchange.sol\":1439:1456  erc20TokenAddress */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SafeExchange.sol\":1412:1457  IERC20 erc20Token = IERC20(erc20TokenAddress) */\n      swap1\n      pop\n        /* \"contracts/SafeExchange.sol\":1468:1487  IERC721 erc721Token */\n      0x00\n        /* \"contracts/SafeExchange.sol\":1498:1516  erc721TokenAddress */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SafeExchange.sol\":1468:1517  IERC721 erc721Token = IERC721(erc721TokenAddress) */\n      swap1\n      pop\n        /* \"contracts/SafeExchange.sol\":1538:1566  bool erc20TransferSuccessful */\n      0x00\n        /* \"contracts/SafeExchange.sol\":1569:1579  erc20Token */\n      dup3\n        /* \"contracts/SafeExchange.sol\":1569:1592  erc20Token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/SafeExchange.sol\":1593:1603  msg.sender */\n      caller\n        /* \"contracts/SafeExchange.sol\":1605:1611  seller */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SafeExchange.sol\":1613:1618  price */\n      sload(0x01)\n        /* \"contracts/SafeExchange.sol\":1569:1619  erc20Token.transferFrom(msg.sender, seller, price) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"contracts/SafeExchange.sol\":1538:1619  bool erc20TransferSuccessful = erc20Token.transferFrom(msg.sender, seller, price) */\n      swap1\n      pop\n        /* \"contracts/SafeExchange.sol\":1638:1661  erc20TransferSuccessful */\n      dup1\n        /* \"contracts/SafeExchange.sol\":1630:1804  require(erc20TransferSuccessful, \"ERC20 transfer not successful. Remember that you must have sufficient funds and make the minimum allowance for the price of this contract.\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"contracts/SafeExchange.sol\":1817:1828  erc721Token */\n      dup2\n        /* \"contracts/SafeExchange.sol\":1817:1841  erc721Token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/SafeExchange.sol\":1842:1848  seller */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SafeExchange.sol\":1850:1860  msg.sender */\n      caller\n        /* \"contracts/SafeExchange.sol\":1862:1875  erc721TokenId */\n      sload(0x04)\n        /* \"contracts/SafeExchange.sol\":1817:1876  erc721Token.transferFrom(seller, msg.sender, erc721TokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_38:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeExchange.sol\":1401:1884  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/SafeExchange.sol\":1370:1884  function executeTrade() public {... */\n      jump\t// out\n        /* \"contracts/SafeExchange.sol\":814:846  address public erc20TokenAddress */\n    tag_26:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_42:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_43:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_59\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_42\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_44:\n        /* \"#utility.yul\":328:352   */\n      tag_61\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_43\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_63\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_44\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_45:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_46:\n        /* \"#utility.yul\":763:787   */\n      tag_66\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_45\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_16:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_68\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_46\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1028:1470   */\n    tag_30:\n        /* \"#utility.yul\":1177:1181   */\n      0x00\n        /* \"#utility.yul\":1215:1217   */\n      0x60\n        /* \"#utility.yul\":1204:1213   */\n      dup3\n        /* \"#utility.yul\":1200:1218   */\n      add\n        /* \"#utility.yul\":1192:1218   */\n      swap1\n      pop\n        /* \"#utility.yul\":1228:1299   */\n      tag_70\n        /* \"#utility.yul\":1296:1297   */\n      0x00\n        /* \"#utility.yul\":1285:1294   */\n      dup4\n        /* \"#utility.yul\":1281:1298   */\n      add\n        /* \"#utility.yul\":1272:1278   */\n      dup7\n        /* \"#utility.yul\":1228:1299   */\n      tag_44\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1309:1381   */\n      tag_71\n        /* \"#utility.yul\":1377:1379   */\n      0x20\n        /* \"#utility.yul\":1366:1375   */\n      dup4\n        /* \"#utility.yul\":1362:1380   */\n      add\n        /* \"#utility.yul\":1353:1359   */\n      dup6\n        /* \"#utility.yul\":1309:1381   */\n      tag_44\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1391:1463   */\n      tag_72\n        /* \"#utility.yul\":1459:1461   */\n      0x40\n        /* \"#utility.yul\":1448:1457   */\n      dup4\n        /* \"#utility.yul\":1444:1462   */\n      add\n        /* \"#utility.yul\":1435:1441   */\n      dup5\n        /* \"#utility.yul\":1391:1463   */\n      tag_46\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1028:1470   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1557:1674   */\n    tag_48:\n        /* \"#utility.yul\":1666:1667   */\n      0x00\n        /* \"#utility.yul\":1663:1664   */\n      dup1\n        /* \"#utility.yul\":1656:1668   */\n      revert\n        /* \"#utility.yul\":1803:1893   */\n    tag_50:\n        /* \"#utility.yul\":1837:1844   */\n      0x00\n        /* \"#utility.yul\":1880:1885   */\n      dup2\n        /* \"#utility.yul\":1873:1886   */\n      iszero\n        /* \"#utility.yul\":1866:1887   */\n      iszero\n        /* \"#utility.yul\":1855:1887   */\n      swap1\n      pop\n        /* \"#utility.yul\":1803:1893   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1899:2015   */\n    tag_51:\n        /* \"#utility.yul\":1969:1990   */\n      tag_78\n        /* \"#utility.yul\":1984:1989   */\n      dup2\n        /* \"#utility.yul\":1969:1990   */\n      tag_50\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1962:1967   */\n      dup2\n        /* \"#utility.yul\":1959:1991   */\n      eq\n        /* \"#utility.yul\":1949:2009   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":2005:2006   */\n      0x00\n        /* \"#utility.yul\":2002:2003   */\n      dup1\n        /* \"#utility.yul\":1995:2007   */\n      revert\n        /* \"#utility.yul\":1949:2009   */\n    tag_79:\n        /* \"#utility.yul\":1899:2015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2021:2158   */\n    tag_52:\n        /* \"#utility.yul\":2075:2080   */\n      0x00\n        /* \"#utility.yul\":2106:2112   */\n      dup2\n        /* \"#utility.yul\":2100:2113   */\n      mload\n        /* \"#utility.yul\":2091:2113   */\n      swap1\n      pop\n        /* \"#utility.yul\":2122:2152   */\n      tag_81\n        /* \"#utility.yul\":2146:2151   */\n      dup2\n        /* \"#utility.yul\":2122:2152   */\n      tag_51\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2021:2158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2164:2509   */\n    tag_34:\n        /* \"#utility.yul\":2231:2237   */\n      0x00\n        /* \"#utility.yul\":2280:2282   */\n      0x20\n        /* \"#utility.yul\":2268:2277   */\n      dup3\n        /* \"#utility.yul\":2259:2266   */\n      dup5\n        /* \"#utility.yul\":2255:2278   */\n      sub\n        /* \"#utility.yul\":2251:2283   */\n      slt\n        /* \"#utility.yul\":2248:2367   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2286:2365   */\n      tag_84\n      tag_48\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2248:2367   */\n    tag_83:\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2431:2492   */\n      tag_85\n        /* \"#utility.yul\":2484:2491   */\n      dup5\n        /* \"#utility.yul\":2475:2481   */\n      dup3\n        /* \"#utility.yul\":2464:2473   */\n      dup6\n        /* \"#utility.yul\":2460:2482   */\n      add\n        /* \"#utility.yul\":2431:2492   */\n      tag_52\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2421:2492   */\n      swap2\n      pop\n        /* \"#utility.yul\":2377:2502   */\n      pop\n        /* \"#utility.yul\":2164:2509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2515:2684   */\n    tag_53:\n        /* \"#utility.yul\":2599:2610   */\n      0x00\n        /* \"#utility.yul\":2633:2639   */\n      dup3\n        /* \"#utility.yul\":2628:2631   */\n      dup3\n        /* \"#utility.yul\":2621:2640   */\n      mstore\n        /* \"#utility.yul\":2673:2677   */\n      0x20\n        /* \"#utility.yul\":2668:2671   */\n      dup3\n        /* \"#utility.yul\":2664:2678   */\n      add\n        /* \"#utility.yul\":2649:2678   */\n      swap1\n      pop\n        /* \"#utility.yul\":2515:2684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2690:3127   */\n    tag_54:\n        /* \"#utility.yul\":2830:2864   */\n      0x4552433230207472616e73666572206e6f74207375636365737366756c2e2052\n        /* \"#utility.yul\":2826:2827   */\n      0x00\n        /* \"#utility.yul\":2818:2824   */\n      dup3\n        /* \"#utility.yul\":2814:2828   */\n      add\n        /* \"#utility.yul\":2807:2865   */\n      mstore\n        /* \"#utility.yul\":2899:2933   */\n      0x656d656d626572207468617420796f75206d7573742068617665207375666669\n        /* \"#utility.yul\":2894:2896   */\n      0x20\n        /* \"#utility.yul\":2886:2892   */\n      dup3\n        /* \"#utility.yul\":2882:2897   */\n      add\n        /* \"#utility.yul\":2875:2934   */\n      mstore\n        /* \"#utility.yul\":2968:3002   */\n      0x6369656e742066756e647320616e64206d616b6520746865206d696e696d756d\n        /* \"#utility.yul\":2963:2965   */\n      0x40\n        /* \"#utility.yul\":2955:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2966   */\n      add\n        /* \"#utility.yul\":2944:3003   */\n      mstore\n        /* \"#utility.yul\":3037:3071   */\n      0x20616c6c6f77616e636520666f7220746865207072696365206f662074686973\n        /* \"#utility.yul\":3032:3034   */\n      0x60\n        /* \"#utility.yul\":3024:3030   */\n      dup3\n        /* \"#utility.yul\":3020:3035   */\n      add\n        /* \"#utility.yul\":3013:3072   */\n      mstore\n        /* \"#utility.yul\":3107:3119   */\n      0x20636f6e74726163742e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3101:3104   */\n      0x80\n        /* \"#utility.yul\":3093:3099   */\n      dup3\n        /* \"#utility.yul\":3089:3105   */\n      add\n        /* \"#utility.yul\":3082:3120   */\n      mstore\n        /* \"#utility.yul\":2690:3127   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3133:3501   */\n    tag_55:\n        /* \"#utility.yul\":3275:3278   */\n      0x00\n        /* \"#utility.yul\":3296:3364   */\n      tag_89\n        /* \"#utility.yul\":3360:3363   */\n      0x8a\n        /* \"#utility.yul\":3355:3358   */\n      dup4\n        /* \"#utility.yul\":3296:3364   */\n      tag_53\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3289:3364   */\n      swap2\n      pop\n        /* \"#utility.yul\":3373:3466   */\n      tag_90\n        /* \"#utility.yul\":3462:3465   */\n      dup3\n        /* \"#utility.yul\":3373:3466   */\n      tag_54\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3491:3494   */\n      0xa0\n        /* \"#utility.yul\":3486:3489   */\n      dup3\n        /* \"#utility.yul\":3482:3495   */\n      add\n        /* \"#utility.yul\":3475:3495   */\n      swap1\n      pop\n        /* \"#utility.yul\":3133:3501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3507:3926   */\n    tag_37:\n        /* \"#utility.yul\":3673:3677   */\n      0x00\n        /* \"#utility.yul\":3711:3713   */\n      0x20\n        /* \"#utility.yul\":3700:3709   */\n      dup3\n        /* \"#utility.yul\":3696:3714   */\n      add\n        /* \"#utility.yul\":3688:3714   */\n      swap1\n      pop\n        /* \"#utility.yul\":3760:3769   */\n      dup2\n        /* \"#utility.yul\":3754:3758   */\n      dup2\n        /* \"#utility.yul\":3750:3770   */\n      sub\n        /* \"#utility.yul\":3746:3747   */\n      0x00\n        /* \"#utility.yul\":3735:3744   */\n      dup4\n        /* \"#utility.yul\":3731:3748   */\n      add\n        /* \"#utility.yul\":3724:3771   */\n      mstore\n        /* \"#utility.yul\":3788:3919   */\n      tag_92\n        /* \"#utility.yul\":3914:3918   */\n      dup2\n        /* \"#utility.yul\":3788:3919   */\n      tag_55\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3780:3919   */\n      swap1\n      pop\n        /* \"#utility.yul\":3507:3926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e7a8793496510b2cabccbdd94478cc76995caaa8fefe2a72ea88cb32bc5c05dd64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_253": {
									"entryPoint": null,
									"id": 253,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2028:4",
										"nodeType": "YulBlock",
										"src": "0:2028:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:32:4",
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nativeSrc": "389:16:4",
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:4",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nativeSrc": "460:79:4",
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:4",
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:4",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:4",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nativeSrc": "519:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nativeSrc": "519:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nativeSrc": "490:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nativeSrc": "480:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nativeSrc": "473:43:4",
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nativeSrc": "470:63:4",
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:4",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nativeSrc": "608:80:4",
													"nodeType": "YulBlock",
													"src": "608:80:4",
													"statements": [
														{
															"nativeSrc": "618:22:4",
															"nodeType": "YulAssignment",
															"src": "618:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:4"
																},
																"nativeSrc": "627:13:4",
																"nodeType": "YulFunctionCall",
																"src": "627:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:4"
																},
																"nativeSrc": "649:33:4",
																"nodeType": "YulFunctionCall",
																"src": "649:33:4"
															},
															"nativeSrc": "649:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:4",
														"nodeType": "YulTypedName",
														"src": "586:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:4",
														"nodeType": "YulTypedName",
														"src": "594:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:4",
														"nodeType": "YulTypedName",
														"src": "602:5:4",
														"type": ""
													}
												],
												"src": "545:143:4"
											},
											{
												"body": {
													"nativeSrc": "739:81:4",
													"nodeType": "YulBlock",
													"src": "739:81:4",
													"statements": [
														{
															"nativeSrc": "749:65:4",
															"nodeType": "YulAssignment",
															"src": "749:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:4",
																		"nodeType": "YulLiteral",
																		"src": "771:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:4"
																},
																"nativeSrc": "760:54:4",
																"nodeType": "YulFunctionCall",
																"src": "760:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:4",
														"nodeType": "YulTypedName",
														"src": "721:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:4",
														"nodeType": "YulTypedName",
														"src": "731:7:4",
														"type": ""
													}
												],
												"src": "694:126:4"
											},
											{
												"body": {
													"nativeSrc": "871:51:4",
													"nodeType": "YulBlock",
													"src": "871:51:4",
													"statements": [
														{
															"nativeSrc": "881:35:4",
															"nodeType": "YulAssignment",
															"src": "881:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:4"
																},
																"nativeSrc": "892:24:4",
																"nodeType": "YulFunctionCall",
																"src": "892:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:4",
														"nodeType": "YulTypedName",
														"src": "853:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:4",
														"nodeType": "YulTypedName",
														"src": "863:7:4",
														"type": ""
													}
												],
												"src": "826:96:4"
											},
											{
												"body": {
													"nativeSrc": "971:79:4",
													"nodeType": "YulBlock",
													"src": "971:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:4",
																"nodeType": "YulBlock",
																"src": "1028:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:4"
																			},
																			"nativeSrc": "1030:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:4"
																		},
																		"nativeSrc": "1030:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:4"
																				},
																				"nativeSrc": "1001:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:4"
																		},
																		"nativeSrc": "991:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:4"
																},
																"nativeSrc": "984:43:4",
																"nodeType": "YulFunctionCall",
																"src": "984:43:4"
															},
															"nativeSrc": "981:63:4",
															"nodeType": "YulIf",
															"src": "981:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:4",
														"nodeType": "YulTypedName",
														"src": "964:5:4",
														"type": ""
													}
												],
												"src": "928:122:4"
											},
											{
												"body": {
													"nativeSrc": "1119:80:4",
													"nodeType": "YulBlock",
													"src": "1119:80:4",
													"statements": [
														{
															"nativeSrc": "1129:22:4",
															"nodeType": "YulAssignment",
															"src": "1129:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:4"
																},
																"nativeSrc": "1138:13:4",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:4"
																},
																"nativeSrc": "1160:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:4"
															},
															"nativeSrc": "1160:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:4",
														"nodeType": "YulTypedName",
														"src": "1097:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:4",
														"nodeType": "YulTypedName",
														"src": "1105:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:4",
														"nodeType": "YulTypedName",
														"src": "1113:5:4",
														"type": ""
													}
												],
												"src": "1056:143:4"
											},
											{
												"body": {
													"nativeSrc": "1333:692:4",
													"nodeType": "YulBlock",
													"src": "1333:692:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1380:83:4",
																"nodeType": "YulBlock",
																"src": "1380:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1382:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1382:77:4"
																			},
																			"nativeSrc": "1382:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1382:79:4"
																		},
																		"nativeSrc": "1382:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1354:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1354:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1363:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1363:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1350:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:4"
																		},
																		"nativeSrc": "1350:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1350:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1375:3:4",
																		"nodeType": "YulLiteral",
																		"src": "1375:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1346:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:4"
																},
																"nativeSrc": "1346:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1346:33:4"
															},
															"nativeSrc": "1343:120:4",
															"nodeType": "YulIf",
															"src": "1343:120:4"
														},
														{
															"nativeSrc": "1473:128:4",
															"nodeType": "YulBlock",
															"src": "1473:128:4",
															"statements": [
																{
																	"nativeSrc": "1488:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1488:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1502:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1502:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1492:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1492:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1517:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1517:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1563:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1563:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1574:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1574:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1559:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1559:3:4"
																				},
																				"nativeSrc": "1559:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1559:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1583:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1583:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1527:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1527:31:4"
																		},
																		"nativeSrc": "1527:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1527:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1517:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1517:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1611:129:4",
															"nodeType": "YulBlock",
															"src": "1611:129:4",
															"statements": [
																{
																	"nativeSrc": "1626:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1626:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1640:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1630:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1630:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1656:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1656:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1702:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1702:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1713:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1713:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1698:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1698:3:4"
																				},
																				"nativeSrc": "1698:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1698:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1722:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1666:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1666:31:4"
																		},
																		"nativeSrc": "1666:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1666:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1656:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1656:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1750:129:4",
															"nodeType": "YulBlock",
															"src": "1750:129:4",
															"statements": [
																{
																	"nativeSrc": "1765:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1765:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1779:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1779:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1769:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1769:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1795:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1795:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1841:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1841:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1852:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1852:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1837:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:4"
																				},
																				"nativeSrc": "1837:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1861:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1861:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1805:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1805:31:4"
																		},
																		"nativeSrc": "1805:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1805:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1795:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1795:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1889:129:4",
															"nodeType": "YulBlock",
															"src": "1889:129:4",
															"statements": [
																{
																	"nativeSrc": "1904:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1904:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1918:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1918:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1908:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1908:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1934:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1934:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1980:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1980:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1991:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1991:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1976:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1976:3:4"
																				},
																				"nativeSrc": "1976:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1976:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2000:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2000:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1944:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1944:31:4"
																		},
																		"nativeSrc": "1944:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1944:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1934:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1934:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:820:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1279:9:4",
														"nodeType": "YulTypedName",
														"src": "1279:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1290:7:4",
														"nodeType": "YulTypedName",
														"src": "1290:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1302:6:4",
														"nodeType": "YulTypedName",
														"src": "1302:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1310:6:4",
														"nodeType": "YulTypedName",
														"src": "1310:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1318:6:4",
														"nodeType": "YulTypedName",
														"src": "1318:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1326:6:4",
														"nodeType": "YulTypedName",
														"src": "1326:6:4",
														"type": ""
													}
												],
												"src": "1205:820:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516107a93803806107a983398181016040528101906100319190610198565b335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836001819055508260025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600481905550505050506101fc565b5f80fd5b5f819050919050565b61011d8161010b565b8114610127575f80fd5b50565b5f8151905061013881610114565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101678261013e565b9050919050565b6101778161015d565b8114610181575f80fd5b50565b5f815190506101928161016e565b92915050565b5f805f80608085870312156101b0576101af610107565b5b5f6101bd8782880161012a565b94505060206101ce87828801610184565b93505060406101df87828801610184565b92505060606101f08782880161012a565b91505092959194509250565b6105a0806102095f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c806308551a53146100645780637239c5ea14610082578063a035b1fe146100a0578063df241cb9146100be578063e0c70b66146100dc578063f835cd3c146100e6575b5f80fd5b61006c610104565b6040516100799190610377565b60405180910390f35b61008a610127565b60405161009791906103a8565b60405180910390f35b6100a861012d565b6040516100b591906103a8565b60405180910390f35b6100c6610133565b6040516100d39190610377565b60405180910390f35b6100e4610158565b005b6100ee610313565b6040516100fb9190610377565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60015481565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8273ffffffffffffffffffffffffffffffffffffffff166323b872dd335f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001546040518463ffffffff1660e01b8152600401610201939291906103c1565b6020604051808303815f875af115801561021d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610241919061042f565b905080610283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027a9061054c565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336004546040518463ffffffff1660e01b81526004016102e1939291906103c1565b5f604051808303815f87803b1580156102f8575f80fd5b505af115801561030a573d5f803e3d5ffd5b50505050505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61036182610338565b9050919050565b61037181610357565b82525050565b5f60208201905061038a5f830184610368565b92915050565b5f819050919050565b6103a281610390565b82525050565b5f6020820190506103bb5f830184610399565b92915050565b5f6060820190506103d45f830186610368565b6103e16020830185610368565b6103ee6040830184610399565b949350505050565b5f80fd5b5f8115159050919050565b61040e816103fa565b8114610418575f80fd5b50565b5f8151905061042981610405565b92915050565b5f60208284031215610444576104436103f6565b5b5f6104518482850161041b565b91505092915050565b5f82825260208201905092915050565b7f4552433230207472616e73666572206e6f74207375636365737366756c2e20525f8201527f656d656d626572207468617420796f75206d757374206861766520737566666960208201527f6369656e742066756e647320616e64206d616b6520746865206d696e696d756d60408201527f20616c6c6f77616e636520666f7220746865207072696365206f66207468697360608201527f20636f6e74726163742e00000000000000000000000000000000000000000000608082015250565b5f610536608a8361045a565b91506105418261046a565b60a082019050919050565b5f6020820190508181035f8301526105638161052a565b905091905056fea2646970667358221220e7a8793496510b2cabccbdd94478cc76995caaa8fefe2a72ea88cb32bc5c05dd64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x7A9 CODESIZE SUB DUP1 PUSH2 0x7A9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x198 JUMP JUMPDEST CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH2 0x1FC JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D DUP2 PUSH2 0x10B JUMP JUMPDEST DUP2 EQ PUSH2 0x127 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x138 DUP2 PUSH2 0x114 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x167 DUP3 PUSH2 0x13E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x177 DUP2 PUSH2 0x15D JUMP JUMPDEST DUP2 EQ PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x192 DUP2 PUSH2 0x16E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B0 JUMPI PUSH2 0x1AF PUSH2 0x107 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD DUP8 DUP3 DUP9 ADD PUSH2 0x12A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1CE DUP8 DUP3 DUP9 ADD PUSH2 0x184 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1DF DUP8 DUP3 DUP9 ADD PUSH2 0x184 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1F0 DUP8 DUP3 DUP9 ADD PUSH2 0x12A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x5A0 DUP1 PUSH2 0x209 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8551A53 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x7239C5EA EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDF241CB9 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0xE0C70B66 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0xF835CD3C EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x12D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x158 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEE PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x201 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x42F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x283 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A SWAP1 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x361 DUP3 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x371 DUP2 PUSH2 0x357 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38A PUSH0 DUP4 ADD DUP5 PUSH2 0x368 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A2 DUP2 PUSH2 0x390 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BB PUSH0 DUP4 ADD DUP5 PUSH2 0x399 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3D4 PUSH0 DUP4 ADD DUP7 PUSH2 0x368 JUMP JUMPDEST PUSH2 0x3E1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x368 JUMP JUMPDEST PUSH2 0x3EE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x399 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40E DUP2 PUSH2 0x3FA JUMP JUMPDEST DUP2 EQ PUSH2 0x418 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x429 DUP2 PUSH2 0x405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x444 JUMPI PUSH2 0x443 PUSH2 0x3F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x451 DUP5 DUP3 DUP6 ADD PUSH2 0x41B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230207472616E73666572206E6F74207375636365737366756C2E2052 PUSH0 DUP3 ADD MSTORE PUSH32 0x656D656D626572207468617420796F75206D7573742068617665207375666669 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6369656E742066756E647320616E64206D616B6520746865206D696E696D756D PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20616C6C6F77616E636520666F7220746865207072696365206F662074686973 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x20636F6E74726163742E00000000000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x536 PUSH1 0x8A DUP4 PUSH2 0x45A JUMP JUMPDEST SWAP2 POP PUSH2 0x541 DUP3 PUSH2 0x46A JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x563 DUP2 PUSH2 0x52A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xA8 PUSH26 0x3496510B2CABCCBDD94478CC76995CAAA8FEFE2A72EA88CB32BC 0x5C SDIV 0xDD PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "680:1207:3:-:0;;;1047:314;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1177:10;1168:6;;:19;;;;;;;;;;;;;;;;;;1206:6;1198:5;:14;;;;1243:18;1223:17;;:38;;;;;;;;;;;;;;;;;;1293:19;1272:18;;:40;;;;;;;;;;;;;;;;;;1339:14;1323:13;:30;;;;1047:314;;;;680:1207;;88:117:4;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:820::-;1302:6;1310;1318;1326;1375:3;1363:9;1354:7;1350:23;1346:33;1343:120;;;1382:79;;:::i;:::-;1343:120;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:64;1722:7;1713:6;1702:9;1698:22;1666:64;:::i;:::-;1656:74;;1611:129;1779:2;1805:64;1861:7;1852:6;1841:9;1837:22;1805:64;:::i;:::-;1795:74;;1750:129;1918:2;1944:64;2000:7;1991:6;1980:9;1976:22;1944:64;:::i;:::-;1934:74;;1889:129;1205:820;;;;;;;:::o;680:1207:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@erc20TokenAddress_216": {
									"entryPoint": 787,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc721TokenAddress_218": {
									"entryPoint": 307,
									"id": 218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc721TokenId_220": {
									"entryPoint": 295,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@executeTrade_295": {
									"entryPoint": 344,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price_214": {
									"entryPoint": 301,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@seller_212": {
									"entryPoint": 260,
									"id": 212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222": {
									"entryPoint": 1130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3929:4",
										"nodeType": "YulBlock",
										"src": "0:3929:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:4",
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nativeSrc": "62:65:4",
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:4",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nativeSrc": "73:54:4",
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nativeSrc": "184:51:4",
													"nodeType": "YulBlock",
													"src": "184:51:4",
													"statements": [
														{
															"nativeSrc": "194:35:4",
															"nodeType": "YulAssignment",
															"src": "194:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:4"
																},
																"nativeSrc": "205:24:4",
																"nodeType": "YulFunctionCall",
																"src": "205:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:4",
														"nodeType": "YulTypedName",
														"src": "166:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:4",
														"nodeType": "YulTypedName",
														"src": "176:7:4",
														"type": ""
													}
												],
												"src": "139:96:4"
											},
											{
												"body": {
													"nativeSrc": "306:53:4",
													"nodeType": "YulBlock",
													"src": "306:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:4"
																		},
																		"nativeSrc": "328:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:4"
																},
																"nativeSrc": "316:37:4",
																"nodeType": "YulFunctionCall",
																"src": "316:37:4"
															},
															"nativeSrc": "316:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:4",
														"nodeType": "YulTypedName",
														"src": "294:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:4",
														"nodeType": "YulTypedName",
														"src": "301:3:4",
														"type": ""
													}
												],
												"src": "241:118:4"
											},
											{
												"body": {
													"nativeSrc": "463:124:4",
													"nodeType": "YulBlock",
													"src": "463:124:4",
													"statements": [
														{
															"nativeSrc": "473:26:4",
															"nodeType": "YulAssignment",
															"src": "473:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:4",
																		"nodeType": "YulLiteral",
																		"src": "496:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:4"
																},
																"nativeSrc": "481:18:4",
																"nodeType": "YulFunctionCall",
																"src": "481:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:4",
																				"nodeType": "YulLiteral",
																				"src": "577:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:4"
																		},
																		"nativeSrc": "562:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:4"
																},
																"nativeSrc": "509:71:4",
																"nodeType": "YulFunctionCall",
																"src": "509:71:4"
															},
															"nativeSrc": "509:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:4",
														"nodeType": "YulTypedName",
														"src": "435:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:4",
														"nodeType": "YulTypedName",
														"src": "447:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:4",
														"nodeType": "YulTypedName",
														"src": "458:4:4",
														"type": ""
													}
												],
												"src": "365:222:4"
											},
											{
												"body": {
													"nativeSrc": "638:32:4",
													"nodeType": "YulBlock",
													"src": "638:32:4",
													"statements": [
														{
															"nativeSrc": "648:16:4",
															"nodeType": "YulAssignment",
															"src": "648:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:4",
																"nodeType": "YulIdentifier",
																"src": "659:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:4",
														"nodeType": "YulTypedName",
														"src": "620:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:4",
														"nodeType": "YulTypedName",
														"src": "630:7:4",
														"type": ""
													}
												],
												"src": "593:77:4"
											},
											{
												"body": {
													"nativeSrc": "741:53:4",
													"nodeType": "YulBlock",
													"src": "741:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "763:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:4"
																		},
																		"nativeSrc": "763:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:4"
																},
																"nativeSrc": "751:37:4",
																"nodeType": "YulFunctionCall",
																"src": "751:37:4"
															},
															"nativeSrc": "751:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "676:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:4",
														"nodeType": "YulTypedName",
														"src": "729:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:4",
														"nodeType": "YulTypedName",
														"src": "736:3:4",
														"type": ""
													}
												],
												"src": "676:118:4"
											},
											{
												"body": {
													"nativeSrc": "898:124:4",
													"nodeType": "YulBlock",
													"src": "898:124:4",
													"statements": [
														{
															"nativeSrc": "908:26:4",
															"nodeType": "YulAssignment",
															"src": "908:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:4",
																		"nodeType": "YulLiteral",
																		"src": "931:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:4"
																},
																"nativeSrc": "916:18:4",
																"nodeType": "YulFunctionCall",
																"src": "916:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:4"
																		},
																		"nativeSrc": "997:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "944:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:4"
																},
																"nativeSrc": "944:71:4",
																"nodeType": "YulFunctionCall",
																"src": "944:71:4"
															},
															"nativeSrc": "944:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "800:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:4",
														"nodeType": "YulTypedName",
														"src": "870:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:4",
														"nodeType": "YulTypedName",
														"src": "882:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:4",
														"nodeType": "YulTypedName",
														"src": "893:4:4",
														"type": ""
													}
												],
												"src": "800:222:4"
											},
											{
												"body": {
													"nativeSrc": "1182:288:4",
													"nodeType": "YulBlock",
													"src": "1182:288:4",
													"statements": [
														{
															"nativeSrc": "1192:26:4",
															"nodeType": "YulAssignment",
															"src": "1192:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1204:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1204:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1215:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1215:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1200:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1200:3:4"
																},
																"nativeSrc": "1200:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1200:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1192:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1192:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1272:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1285:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1285:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1296:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1296:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1281:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1281:3:4"
																		},
																		"nativeSrc": "1281:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1281:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1228:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1228:43:4"
																},
																"nativeSrc": "1228:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1228:71:4"
															},
															"nativeSrc": "1228:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1228:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1353:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1353:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1366:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1366:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1377:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1377:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1362:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1362:3:4"
																		},
																		"nativeSrc": "1362:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1362:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1309:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1309:43:4"
																},
																"nativeSrc": "1309:72:4",
																"nodeType": "YulFunctionCall",
																"src": "1309:72:4"
															},
															"nativeSrc": "1309:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "1309:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "1435:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1435:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1459:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1459:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1444:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:4"
																		},
																		"nativeSrc": "1444:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1444:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1391:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1391:43:4"
																},
																"nativeSrc": "1391:72:4",
																"nodeType": "YulFunctionCall",
																"src": "1391:72:4"
															},
															"nativeSrc": "1391:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "1391:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1028:442:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1138:9:4",
														"nodeType": "YulTypedName",
														"src": "1138:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1150:6:4",
														"nodeType": "YulTypedName",
														"src": "1150:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1158:6:4",
														"nodeType": "YulTypedName",
														"src": "1158:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1166:6:4",
														"nodeType": "YulTypedName",
														"src": "1166:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1177:4:4",
														"nodeType": "YulTypedName",
														"src": "1177:4:4",
														"type": ""
													}
												],
												"src": "1028:442:4"
											},
											{
												"body": {
													"nativeSrc": "1516:35:4",
													"nodeType": "YulBlock",
													"src": "1516:35:4",
													"statements": [
														{
															"nativeSrc": "1526:19:4",
															"nodeType": "YulAssignment",
															"src": "1526:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1542:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1542:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1536:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1536:5:4"
																},
																"nativeSrc": "1536:9:4",
																"nodeType": "YulFunctionCall",
																"src": "1536:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1526:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1526:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1476:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1509:6:4",
														"nodeType": "YulTypedName",
														"src": "1509:6:4",
														"type": ""
													}
												],
												"src": "1476:75:4"
											},
											{
												"body": {
													"nativeSrc": "1646:28:4",
													"nodeType": "YulBlock",
													"src": "1646:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1663:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1663:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1666:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1666:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1656:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1656:6:4"
																},
																"nativeSrc": "1656:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1656:12:4"
															},
															"nativeSrc": "1656:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1656:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1557:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1557:117:4"
											},
											{
												"body": {
													"nativeSrc": "1769:28:4",
													"nodeType": "YulBlock",
													"src": "1769:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1786:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1786:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1789:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1789:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1779:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1779:6:4"
																},
																"nativeSrc": "1779:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1779:12:4"
															},
															"nativeSrc": "1779:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1779:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1680:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1680:117:4"
											},
											{
												"body": {
													"nativeSrc": "1845:48:4",
													"nodeType": "YulBlock",
													"src": "1845:48:4",
													"statements": [
														{
															"nativeSrc": "1855:32:4",
															"nodeType": "YulAssignment",
															"src": "1855:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1880:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1880:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1873:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1873:6:4"
																		},
																		"nativeSrc": "1873:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1873:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1866:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1866:6:4"
																},
																"nativeSrc": "1866:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1866:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1855:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1855:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1803:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1827:5:4",
														"nodeType": "YulTypedName",
														"src": "1827:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1837:7:4",
														"nodeType": "YulTypedName",
														"src": "1837:7:4",
														"type": ""
													}
												],
												"src": "1803:90:4"
											},
											{
												"body": {
													"nativeSrc": "1939:76:4",
													"nodeType": "YulBlock",
													"src": "1939:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1993:16:4",
																"nodeType": "YulBlock",
																"src": "1993:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2002:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2002:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2005:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2005:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1995:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1995:6:4"
																			},
																			"nativeSrc": "1995:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1995:12:4"
																		},
																		"nativeSrc": "1995:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1995:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1962:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1962:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1984:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1984:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "1969:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "1969:14:4"
																				},
																				"nativeSrc": "1969:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1969:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1959:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1959:2:4"
																		},
																		"nativeSrc": "1959:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1959:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1952:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1952:6:4"
																},
																"nativeSrc": "1952:40:4",
																"nodeType": "YulFunctionCall",
																"src": "1952:40:4"
															},
															"nativeSrc": "1949:60:4",
															"nodeType": "YulIf",
															"src": "1949:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "1899:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1932:5:4",
														"nodeType": "YulTypedName",
														"src": "1932:5:4",
														"type": ""
													}
												],
												"src": "1899:116:4"
											},
											{
												"body": {
													"nativeSrc": "2081:77:4",
													"nodeType": "YulBlock",
													"src": "2081:77:4",
													"statements": [
														{
															"nativeSrc": "2091:22:4",
															"nodeType": "YulAssignment",
															"src": "2091:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2106:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2106:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2100:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:4"
																},
																"nativeSrc": "2100:13:4",
																"nodeType": "YulFunctionCall",
																"src": "2100:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2091:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2091:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2146:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2146:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "2122:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "2122:23:4"
																},
																"nativeSrc": "2122:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2122:30:4"
															},
															"nativeSrc": "2122:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2122:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "2021:137:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2059:6:4",
														"nodeType": "YulTypedName",
														"src": "2059:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2067:3:4",
														"nodeType": "YulTypedName",
														"src": "2067:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2075:5:4",
														"nodeType": "YulTypedName",
														"src": "2075:5:4",
														"type": ""
													}
												],
												"src": "2021:137:4"
											},
											{
												"body": {
													"nativeSrc": "2238:271:4",
													"nodeType": "YulBlock",
													"src": "2238:271:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2284:83:4",
																"nodeType": "YulBlock",
																"src": "2284:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2286:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2286:77:4"
																			},
																			"nativeSrc": "2286:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2286:79:4"
																		},
																		"nativeSrc": "2286:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2286:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2259:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2259:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2268:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2268:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2255:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:4"
																		},
																		"nativeSrc": "2255:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2255:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2280:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2280:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2251:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2251:3:4"
																},
																"nativeSrc": "2251:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2251:32:4"
															},
															"nativeSrc": "2248:119:4",
															"nodeType": "YulIf",
															"src": "2248:119:4"
														},
														{
															"nativeSrc": "2377:125:4",
															"nodeType": "YulBlock",
															"src": "2377:125:4",
															"statements": [
																{
																	"nativeSrc": "2392:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2392:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2406:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2406:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2396:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2396:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2421:71:4",
																	"nodeType": "YulAssignment",
																	"src": "2421:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2464:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2464:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2475:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2475:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2460:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2460:3:4"
																				},
																				"nativeSrc": "2460:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2460:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2484:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2484:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "2431:28:4",
																			"nodeType": "YulIdentifier",
																			"src": "2431:28:4"
																		},
																		"nativeSrc": "2431:61:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2431:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2421:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2421:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2164:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2208:9:4",
														"nodeType": "YulTypedName",
														"src": "2208:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2219:7:4",
														"nodeType": "YulTypedName",
														"src": "2219:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2231:6:4",
														"nodeType": "YulTypedName",
														"src": "2231:6:4",
														"type": ""
													}
												],
												"src": "2164:345:4"
											},
											{
												"body": {
													"nativeSrc": "2611:73:4",
													"nodeType": "YulBlock",
													"src": "2611:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2628:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2628:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2633:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2633:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2621:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2621:6:4"
																},
																"nativeSrc": "2621:19:4",
																"nodeType": "YulFunctionCall",
																"src": "2621:19:4"
															},
															"nativeSrc": "2621:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "2621:19:4"
														},
														{
															"nativeSrc": "2649:29:4",
															"nodeType": "YulAssignment",
															"src": "2649:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2668:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2668:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2673:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2664:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2664:3:4"
																},
																"nativeSrc": "2664:14:4",
																"nodeType": "YulFunctionCall",
																"src": "2664:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2649:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "2649:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2515:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2583:3:4",
														"nodeType": "YulTypedName",
														"src": "2583:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2588:6:4",
														"nodeType": "YulTypedName",
														"src": "2588:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2599:11:4",
														"nodeType": "YulTypedName",
														"src": "2599:11:4",
														"type": ""
													}
												],
												"src": "2515:169:4"
											},
											{
												"body": {
													"nativeSrc": "2796:331:4",
													"nodeType": "YulBlock",
													"src": "2796:331:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2818:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2818:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2826:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2826:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2814:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2814:3:4"
																		},
																		"nativeSrc": "2814:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2814:14:4"
																	},
																	{
																		"hexValue": "4552433230207472616e73666572206e6f74207375636365737366756c2e2052",
																		"kind": "string",
																		"nativeSrc": "2830:34:4",
																		"nodeType": "YulLiteral",
																		"src": "2830:34:4",
																		"type": "",
																		"value": "ERC20 transfer not successful. R"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2807:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:4"
																},
																"nativeSrc": "2807:58:4",
																"nodeType": "YulFunctionCall",
																"src": "2807:58:4"
															},
															"nativeSrc": "2807:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "2807:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2886:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2886:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2894:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2894:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2882:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2882:3:4"
																		},
																		"nativeSrc": "2882:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2882:15:4"
																	},
																	{
																		"hexValue": "656d656d626572207468617420796f75206d7573742068617665207375666669",
																		"kind": "string",
																		"nativeSrc": "2899:34:4",
																		"nodeType": "YulLiteral",
																		"src": "2899:34:4",
																		"type": "",
																		"value": "emember that you must have suffi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2875:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:4"
																},
																"nativeSrc": "2875:59:4",
																"nodeType": "YulFunctionCall",
																"src": "2875:59:4"
															},
															"nativeSrc": "2875:59:4",
															"nodeType": "YulExpressionStatement",
															"src": "2875:59:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2955:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2955:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2963:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2963:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2951:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2951:3:4"
																		},
																		"nativeSrc": "2951:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2951:15:4"
																	},
																	{
																		"hexValue": "6369656e742066756e647320616e64206d616b6520746865206d696e696d756d",
																		"kind": "string",
																		"nativeSrc": "2968:34:4",
																		"nodeType": "YulLiteral",
																		"src": "2968:34:4",
																		"type": "",
																		"value": "cient funds and make the minimum"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2944:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2944:6:4"
																},
																"nativeSrc": "2944:59:4",
																"nodeType": "YulFunctionCall",
																"src": "2944:59:4"
															},
															"nativeSrc": "2944:59:4",
															"nodeType": "YulExpressionStatement",
															"src": "2944:59:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3024:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3024:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3032:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3032:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3020:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3020:3:4"
																		},
																		"nativeSrc": "3020:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3020:15:4"
																	},
																	{
																		"hexValue": "20616c6c6f77616e636520666f7220746865207072696365206f662074686973",
																		"kind": "string",
																		"nativeSrc": "3037:34:4",
																		"nodeType": "YulLiteral",
																		"src": "3037:34:4",
																		"type": "",
																		"value": " allowance for the price of this"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3013:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3013:6:4"
																},
																"nativeSrc": "3013:59:4",
																"nodeType": "YulFunctionCall",
																"src": "3013:59:4"
															},
															"nativeSrc": "3013:59:4",
															"nodeType": "YulExpressionStatement",
															"src": "3013:59:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3093:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3093:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3101:3:4",
																				"nodeType": "YulLiteral",
																				"src": "3101:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3089:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3089:3:4"
																		},
																		"nativeSrc": "3089:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:16:4"
																	},
																	{
																		"hexValue": "20636f6e74726163742e",
																		"kind": "string",
																		"nativeSrc": "3107:12:4",
																		"nodeType": "YulLiteral",
																		"src": "3107:12:4",
																		"type": "",
																		"value": " contract."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3082:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:4"
																},
																"nativeSrc": "3082:38:4",
																"nodeType": "YulFunctionCall",
																"src": "3082:38:4"
															},
															"nativeSrc": "3082:38:4",
															"nodeType": "YulExpressionStatement",
															"src": "3082:38:4"
														}
													]
												},
												"name": "store_literal_in_memory_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222",
												"nativeSrc": "2690:437:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2788:6:4",
														"nodeType": "YulTypedName",
														"src": "2788:6:4",
														"type": ""
													}
												],
												"src": "2690:437:4"
											},
											{
												"body": {
													"nativeSrc": "3279:222:4",
													"nodeType": "YulBlock",
													"src": "3279:222:4",
													"statements": [
														{
															"nativeSrc": "3289:75:4",
															"nodeType": "YulAssignment",
															"src": "3289:75:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3355:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3355:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3360:3:4",
																		"nodeType": "YulLiteral",
																		"src": "3360:3:4",
																		"type": "",
																		"value": "138"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3296:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "3296:58:4"
																},
																"nativeSrc": "3296:68:4",
																"nodeType": "YulFunctionCall",
																"src": "3296:68:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3289:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3289:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3462:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3462:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222",
																	"nativeSrc": "3373:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "3373:88:4"
																},
																"nativeSrc": "3373:93:4",
																"nodeType": "YulFunctionCall",
																"src": "3373:93:4"
															},
															"nativeSrc": "3373:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "3373:93:4"
														},
														{
															"nativeSrc": "3475:20:4",
															"nodeType": "YulAssignment",
															"src": "3475:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3486:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3486:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3491:3:4",
																		"nodeType": "YulLiteral",
																		"src": "3491:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3482:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3482:3:4"
																},
																"nativeSrc": "3482:13:4",
																"nodeType": "YulFunctionCall",
																"src": "3482:13:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3475:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3133:368:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3267:3:4",
														"nodeType": "YulTypedName",
														"src": "3267:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3275:3:4",
														"nodeType": "YulTypedName",
														"src": "3275:3:4",
														"type": ""
													}
												],
												"src": "3133:368:4"
											},
											{
												"body": {
													"nativeSrc": "3678:248:4",
													"nodeType": "YulBlock",
													"src": "3678:248:4",
													"statements": [
														{
															"nativeSrc": "3688:26:4",
															"nodeType": "YulAssignment",
															"src": "3688:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3700:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3700:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3711:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3711:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3696:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3696:3:4"
																},
																"nativeSrc": "3696:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3696:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3688:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3688:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3735:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3735:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3746:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3746:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3731:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:4"
																		},
																		"nativeSrc": "3731:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3731:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3754:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "3754:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3760:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3760:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3750:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3750:3:4"
																		},
																		"nativeSrc": "3750:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3750:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3724:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3724:6:4"
																},
																"nativeSrc": "3724:47:4",
																"nodeType": "YulFunctionCall",
																"src": "3724:47:4"
															},
															"nativeSrc": "3724:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "3724:47:4"
														},
														{
															"nativeSrc": "3780:139:4",
															"nodeType": "YulAssignment",
															"src": "3780:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3914:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "3914:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3788:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "3788:124:4"
																},
																"nativeSrc": "3788:131:4",
																"nodeType": "YulFunctionCall",
																"src": "3788:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3780:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3780:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3507:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3658:9:4",
														"nodeType": "YulTypedName",
														"src": "3658:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3673:4:4",
														"nodeType": "YulTypedName",
														"src": "3673:4:4",
														"type": ""
													}
												],
												"src": "3507:419:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20 transfer not successful. R\")\n\n        mstore(add(memPtr, 32), \"emember that you must have suffi\")\n\n        mstore(add(memPtr, 64), \"cient funds and make the minimum\")\n\n        mstore(add(memPtr, 96), \" allowance for the price of this\")\n\n        mstore(add(memPtr, 128), \" contract.\")\n\n    }\n\n    function abi_encode_t_stringliteral_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 138)\n        store_literal_in_memory_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222(pos)\n        end := add(pos, 160)\n    }\n\n    function abi_encode_tuple_t_stringliteral_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c806308551a53146100645780637239c5ea14610082578063a035b1fe146100a0578063df241cb9146100be578063e0c70b66146100dc578063f835cd3c146100e6575b5f80fd5b61006c610104565b6040516100799190610377565b60405180910390f35b61008a610127565b60405161009791906103a8565b60405180910390f35b6100a861012d565b6040516100b591906103a8565b60405180910390f35b6100c6610133565b6040516100d39190610377565b60405180910390f35b6100e4610158565b005b6100ee610313565b6040516100fb9190610377565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60015481565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8273ffffffffffffffffffffffffffffffffffffffff166323b872dd335f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001546040518463ffffffff1660e01b8152600401610201939291906103c1565b6020604051808303815f875af115801561021d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610241919061042f565b905080610283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027a9061054c565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336004546040518463ffffffff1660e01b81526004016102e1939291906103c1565b5f604051808303815f87803b1580156102f8575f80fd5b505af115801561030a573d5f803e3d5ffd5b50505050505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61036182610338565b9050919050565b61037181610357565b82525050565b5f60208201905061038a5f830184610368565b92915050565b5f819050919050565b6103a281610390565b82525050565b5f6020820190506103bb5f830184610399565b92915050565b5f6060820190506103d45f830186610368565b6103e16020830185610368565b6103ee6040830184610399565b949350505050565b5f80fd5b5f8115159050919050565b61040e816103fa565b8114610418575f80fd5b50565b5f8151905061042981610405565b92915050565b5f60208284031215610444576104436103f6565b5b5f6104518482850161041b565b91505092915050565b5f82825260208201905092915050565b7f4552433230207472616e73666572206e6f74207375636365737366756c2e20525f8201527f656d656d626572207468617420796f75206d757374206861766520737566666960208201527f6369656e742066756e647320616e64206d616b6520746865206d696e696d756d60408201527f20616c6c6f77616e636520666f7220746865207072696365206f66207468697360608201527f20636f6e74726163742e00000000000000000000000000000000000000000000608082015250565b5f610536608a8361045a565b91506105418261046a565b60a082019050919050565b5f6020820190508181035f8301526105638161052a565b905091905056fea2646970667358221220e7a8793496510b2cabccbdd94478cc76995caaa8fefe2a72ea88cb32bc5c05dd64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8551A53 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x7239C5EA EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDF241CB9 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0xE0C70B66 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0xF835CD3C EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x12D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x158 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEE PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x201 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x42F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x283 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A SWAP1 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x361 DUP3 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x371 DUP2 PUSH2 0x357 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38A PUSH0 DUP4 ADD DUP5 PUSH2 0x368 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A2 DUP2 PUSH2 0x390 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BB PUSH0 DUP4 ADD DUP5 PUSH2 0x399 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3D4 PUSH0 DUP4 ADD DUP7 PUSH2 0x368 JUMP JUMPDEST PUSH2 0x3E1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x368 JUMP JUMPDEST PUSH2 0x3EE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x399 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40E DUP2 PUSH2 0x3FA JUMP JUMPDEST DUP2 EQ PUSH2 0x418 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x429 DUP2 PUSH2 0x405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x444 JUMPI PUSH2 0x443 PUSH2 0x3F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x451 DUP5 DUP3 DUP6 ADD PUSH2 0x41B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230207472616E73666572206E6F74207375636365737366756C2E2052 PUSH0 DUP3 ADD MSTORE PUSH32 0x656D656D626572207468617420796F75206D7573742068617665207375666669 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6369656E742066756E647320616E64206D616B6520746865206D696E696D756D PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20616C6C6F77616E636520666F7220746865207072696365206F662074686973 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x20636F6E74726163742E00000000000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x536 PUSH1 0x8A DUP4 PUSH2 0x45A JUMP JUMPDEST SWAP2 POP PUSH2 0x541 DUP3 PUSH2 0x46A JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x563 DUP2 PUSH2 0x52A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xA8 PUSH26 0x3496510B2CABCCBDD94478CC76995CAAA8FEFE2A72EA88CB32BC 0x5C SDIV 0xDD PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "680:1207:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;711:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;969:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;739:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;895:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1370:514;;;:::i;:::-;;814:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;711:21;;;;;;;;;;;;:::o;969:28::-;;;;:::o;739:20::-;;;;:::o;895:33::-;;;;;;;;;;;;;:::o;1370:514::-;1412:17;1439;;;;;;;;;;;1412:45;;1468:19;1498:18;;;;;;;;;;;1468:49;;1538:28;1569:10;:23;;;1593:10;1605:6;;;;;;;;;;1613:5;;1569:50;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1538:81;;1638:23;1630:174;;;;;;;;;;;;:::i;:::-;;;;;;;;;1817:11;:24;;;1842:6;;;;;;;;;;1850:10;1862:13;;1817:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1401:483;;;1370:514::o;814:32::-;;;;;;;;;;;;;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1028:442::-;1177:4;1215:2;1204:9;1200:18;1192:26;;1228:71;1296:1;1285:9;1281:17;1272:6;1228:71;:::i;:::-;1309:72;1377:2;1366:9;1362:18;1353:6;1309:72;:::i;:::-;1391;1459:2;1448:9;1444:18;1435:6;1391:72;:::i;:::-;1028:442;;;;;;:::o;1557:117::-;1666:1;1663;1656:12;1803:90;1837:7;1880:5;1873:13;1866:21;1855:32;;1803:90;;;:::o;1899:116::-;1969:21;1984:5;1969:21;:::i;:::-;1962:5;1959:32;1949:60;;2005:1;2002;1995:12;1949:60;1899:116;:::o;2021:137::-;2075:5;2106:6;2100:13;2091:22;;2122:30;2146:5;2122:30;:::i;:::-;2021:137;;;;:::o;2164:345::-;2231:6;2280:2;2268:9;2259:7;2255:23;2251:32;2248:119;;;2286:79;;:::i;:::-;2248:119;2406:1;2431:61;2484:7;2475:6;2464:9;2460:22;2431:61;:::i;:::-;2421:71;;2377:125;2164:345;;;;:::o;2515:169::-;2599:11;2633:6;2628:3;2621:19;2673:4;2668:3;2664:14;2649:29;;2515:169;;;;:::o;2690:437::-;2830:34;2826:1;2818:6;2814:14;2807:58;2899:34;2894:2;2886:6;2882:15;2875:59;2968:34;2963:2;2955:6;2951:15;2944:59;3037:34;3032:2;3024:6;3020:15;3013:59;3107:12;3101:3;3093:6;3089:16;3082:38;2690:437;:::o;3133:368::-;3275:3;3296:68;3360:3;3355;3296:68;:::i;:::-;3289:75;;3373:93;3462:3;3373:93;:::i;:::-;3491:3;3486;3482:13;3475:20;;3133:368;;;:::o;3507:419::-;3673:4;3711:2;3700:9;3696:18;3688:26;;3760:9;3754:4;3750:20;3746:1;3735:9;3731:17;3724:47;3788:131;3914:4;3788:131;:::i;:::-;3780:139;;3507:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "288000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"erc20TokenAddress()": "2596",
								"erc721TokenAddress()": "2552",
								"erc721TokenId()": "2425",
								"executeTrade()": "infinite",
								"price()": "2447",
								"seller()": "2483"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 680,
									"end": 1887,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1047,
									"end": 1361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1187,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1174,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1174,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1187,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1206,
									"end": 1212,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1198,
									"end": 1203,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1198,
									"end": 1212,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1198,
									"end": 1212,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1198,
									"end": 1212,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1198,
									"end": 1212,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1243,
									"end": 1261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1240,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1223,
									"end": 1240,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1223,
									"end": 1261,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1293,
									"end": 1312,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1312,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1339,
									"end": 1353,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1323,
									"end": 1336,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1323,
									"end": 1353,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1323,
									"end": 1353,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1323,
									"end": 1353,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1323,
									"end": 1353,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1047,
									"end": 1361,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1308,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1375,
									"end": 1378,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1363,
									"end": 1372,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1354,
									"end": 1361,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1350,
									"end": 1373,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1382,
									"end": 1461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1502,
									"end": 1503,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1583,
									"end": 1590,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1580,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1563,
									"end": 1572,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1559,
									"end": 1581,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1527,
									"end": 1591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1473,
									"end": 1601,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1640,
									"end": 1642,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1722,
									"end": 1729,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1702,
									"end": 1711,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1698,
									"end": 1720,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1666,
									"end": 1730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1611,
									"end": 1740,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1781,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1861,
									"end": 1868,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1852,
									"end": 1858,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1841,
									"end": 1850,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1805,
									"end": 1869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1750,
									"end": 1879,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1918,
									"end": 1920,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 2000,
									"end": 2007,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1991,
									"end": 1997,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 1989,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 1998,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1944,
									"end": 2008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1889,
									"end": 2018,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 1887,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7a8793496510b2cabccbdd94478cc76995caaa8fefe2a72ea88cb32bc5c05dd64736f6c63430008160033",
									".code": [
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "8551A53"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "7239C5EA"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "A035B1FE"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "DF241CB9"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "E0C70B66"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "F835CD3C"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 711,
											"end": 732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 711,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 711,
											"end": 732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 711,
											"end": 732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 732,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 711,
											"end": 732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 711,
											"end": 732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 711,
											"end": 732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 732,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 969,
											"end": 997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 969,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 969,
											"end": 997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 969,
											"end": 997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 997,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 969,
											"end": 997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 969,
											"end": 997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 969,
											"end": 997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 997,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 739,
											"end": 759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 739,
											"end": 759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 895,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 928,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 895,
											"end": 928,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 895,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 895,
											"end": 928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 928,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1884,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1370,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1370,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 1884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1884,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1370,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1884,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 814,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 814,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 711,
											"end": 732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 732,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 711,
											"end": 732,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 711,
											"end": 732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 969,
											"end": 997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 969,
											"end": 997,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 969,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 739,
											"end": 759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 895,
											"end": 928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 895,
											"end": 928,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1884,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1429,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1468,
											"end": 1487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1468,
											"end": 1517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1468,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1566,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1593,
											"end": 1603,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1618,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1613,
											"end": 1618,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1569,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1569,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1569,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1630,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1630,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1860,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1862,
											"end": 1875,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1862,
											"end": 1875,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1817,
											"end": 1876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 1884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 1884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 1884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 814,
											"end": 846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1470,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1028,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1177,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1204,
											"end": 1213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1296,
											"end": 1297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1294,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1228,
											"end": 1299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1299,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1228,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1377,
											"end": 1379,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1309,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1381,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1309,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1391,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1459,
											"end": 1461,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1391,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1391,
											"end": 1463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1391,
											"end": 1463,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1391,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1470,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1470,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1674,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1557,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1666,
											"end": 1667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1664,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1656,
											"end": 1668,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1893,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1803,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1886,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1887,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1887,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1893,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1893,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 2015,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1899,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1984,
											"end": 1989,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1969,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 1990,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1969,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 1967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1991,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1949,
											"end": 2009,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2003,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2007,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 2009,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1949,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 2015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 2015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2158,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2021,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2080,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2100,
											"end": 2113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2122,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2152,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2122,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2158,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2509,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2164,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2231,
											"end": 2237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2277,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2266,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2278,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2283,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2367,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2248,
											"end": 2367,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2286,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2286,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2365,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2286,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2367,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2248,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2475,
											"end": 2481,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2464,
											"end": 2473,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2482,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2431,
											"end": 2492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2492,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2431,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2492,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2492,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2509,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2509,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2515,
											"end": 2684,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2515,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2639,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2628,
											"end": 2631,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2677,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2668,
											"end": 2671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2664,
											"end": 2678,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2515,
											"end": 2684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2515,
											"end": 2684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2515,
											"end": 2684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2515,
											"end": 2684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2515,
											"end": 2684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 3127,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2690,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2864,
											"name": "PUSH",
											"source": 4,
											"value": "4552433230207472616E73666572206E6F74207375636365737366756C2E2052"
										},
										{
											"begin": 2826,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2814,
											"end": 2828,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "656D656D626572207468617420796F75206D7573742068617665207375666669"
										},
										{
											"begin": 2894,
											"end": 2896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2886,
											"end": 2892,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2934,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3002,
											"name": "PUSH",
											"source": 4,
											"value": "6369656E742066756E647320616E64206D616B6520746865206D696E696D756D"
										},
										{
											"begin": 2963,
											"end": 2965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 2966,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3003,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3071,
											"name": "PUSH",
											"source": 4,
											"value": "20616C6C6F77616E636520666F7220746865207072696365206F662074686973"
										},
										{
											"begin": 3032,
											"end": 3034,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3024,
											"end": 3030,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3035,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3072,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "20636F6E74726163742E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 3101,
											"end": 3104,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3093,
											"end": 3099,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3105,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 3127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 3127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3501,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3133,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3275,
											"end": 3278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3360,
											"end": 3363,
											"name": "PUSH",
											"source": 4,
											"value": "8A"
										},
										{
											"begin": 3355,
											"end": 3358,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3296,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3364,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3296,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3289,
											"end": 3364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3289,
											"end": 3364,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3462,
											"end": 3465,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3373,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3466,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3373,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3494,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 3486,
											"end": 3489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3713,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3769,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3770,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3744,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3771,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3914,
											"end": 3918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3788,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3780,
											"end": 3919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3780,
											"end": 3919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/SafeExchange.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"erc20TokenAddress()": "f835cd3c",
							"erc721TokenAddress()": "df241cb9",
							"erc721TokenId()": "7239c5ea",
							"executeTrade()": "e0c70b66",
							"price()": "a035b1fe",
							"seller()": "08551a53"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20TokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc721TokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_erc721TokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"erc20TokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721TokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721TokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeExchange.sol\":\"SafeExchange\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/SafeExchange.sol\":{\"keccak256\":\"0x037deafd3b20c6e56983f634190a32a25483da508c8734ddd9a2caf390f6a4ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b04970605643e90b6870d2895817a4da9e0c9a4bf7432d58dc1b833c2d7577ca\",\"dweb:/ipfs/QmWLifxh35SNJtxRiDwKuRELrsKQ99oLkJFHHBofTFJh3D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 212,
								"contract": "contracts/SafeExchange.sol:SafeExchange",
								"label": "seller",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 214,
								"contract": "contracts/SafeExchange.sol:SafeExchange",
								"label": "price",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 216,
								"contract": "contracts/SafeExchange.sol:SafeExchange",
								"label": "erc20TokenAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 218,
								"contract": "contracts/SafeExchange.sol:SafeExchange",
								"label": "erc721TokenAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 220,
								"contract": "contracts/SafeExchange.sol:SafeExchange",
								"label": "erc721TokenId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							206
						],
						"IERC721": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 207,
							"src": "134:62:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 80,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 206,
										"src": "142:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 83,
										"name": "IERC165",
										"nameLocations": [
											"287:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 206,
										"src": "287:7:1"
									},
									"id": 84,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 82,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								206
							],
							"name": "IERC721",
							"nameLocation": "276:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 93,
									"name": "Transfer",
									"nameLocation": "400:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "409:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "431:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "451:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:1"
									},
									"src": "394:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 102,
									"name": "Approval",
									"nameLocation": "587:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "596:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "619:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "645:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:1"
									},
									"src": "581:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 111,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "819:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "842:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "868:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:1"
									},
									"src": "798:85:1"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "989:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1027:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:1"
									},
									"scope": 194,
									"src": "970:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1203:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:1"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1243:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:1"
									},
									"scope": 194,
									"src": "1186:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1860:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1874:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1886:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1903:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:1"
									},
									"scope": 194,
									"src": "1834:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2701:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:1"
									},
									"scope": 194,
									"src": "2649:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "3492:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "3506:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "3518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:1"
									},
									"scope": 194,
									"src": "3470:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4024:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4036:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:1"
									},
									"scope": 194,
									"src": "4007:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "4415:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "4433:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:1"
									},
									"scope": 194,
									"src": "4388:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4628:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4668:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:1"
									},
									"scope": 194,
									"src": "4607:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4861:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4876:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4917:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:1"
									},
									"scope": 194,
									"src": "4835:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 195,
							"src": "266:4659:1",
							"usedErrors": [],
							"usedEvents": [
								93,
								102,
								111
							]
						}
					],
					"src": "108:4818:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							206
						]
					},
					"id": 207,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 206,
							"linearizedBaseContracts": [
								206
							],
							"name": "IERC165",
							"nameLocation": "431:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "817:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 199,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "860:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:2"
									},
									"scope": 206,
									"src": "790:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 207,
							"src": "421:447:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:2"
				},
				"id": 2
			},
			"contracts/SafeExchange.sol": {
				"ast": {
					"absolutePath": "contracts/SafeExchange.sol",
					"exportedSymbols": {
						"IERC165": [
							206
						],
						"IERC20": [
							77
						],
						"IERC721": [
							194
						],
						"SafeExchange": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 208,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "532:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 209,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 78,
							"src": "560:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 210,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 195,
							"src": "618:58:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeExchange",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "SafeExchange",
							"nameLocation": "689:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "08551a53",
									"id": 212,
									"mutability": "mutable",
									"name": "seller",
									"nameLocation": "726:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "711:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 211,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "711:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a035b1fe",
									"id": 214,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "754:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "739:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "739:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f835cd3c",
									"id": 216,
									"mutability": "mutable",
									"name": "erc20TokenAddress",
									"nameLocation": "829:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "814:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 215,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "814:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df241cb9",
									"id": 218,
									"mutability": "mutable",
									"name": "erc721TokenAddress",
									"nameLocation": "910:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "895:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 217,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "895:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7239c5ea",
									"id": 220,
									"mutability": "mutable",
									"name": "erc721TokenId",
									"nameLocation": "984:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "969:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "969:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "1157:204:3",
										"statements": [
											{
												"expression": {
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 231,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "1168:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 232,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1177:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1181:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1177:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1168:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1168:19:3"
											},
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 236,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "1198:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 237,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1206:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1198:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "1198:14:3"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 240,
														"name": "erc20TokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1223:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "_erc20TokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1243:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1223:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "1223:38:3"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 244,
														"name": "erc721TokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1272:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "_erc721TokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1293:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1272:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1272:40:3"
											},
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 248,
														"name": "erc721TokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "1323:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 249,
														"name": "_erc721TokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "1339:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1323:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "1323:30:3"
											}
										]
									},
									"id": 253,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1068:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1060:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "_erc20TokenAddress",
												"nameLocation": "1084:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1076:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "_erc721TokenAddress",
												"nameLocation": "1112:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1104:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "_erc721TokenId",
												"nameLocation": "1141:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1133:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:97:3"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1157:0:3"
									},
									"scope": 296,
									"src": "1047:314:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "1401:483:3",
										"statements": [
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "erc20Token",
														"nameLocation": "1419:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 294,
														"src": "1412:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 257,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 256,
																"name": "IERC20",
																"nameLocations": [
																	"1412:6:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 77,
																"src": "1412:6:3"
															},
															"referencedDeclaration": 77,
															"src": "1412:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"arguments": [
														{
															"id": 260,
															"name": "erc20TokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1439:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 259,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1432:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1412:45:3"
											},
											{
												"assignments": [
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "erc721Token",
														"nameLocation": "1476:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 294,
														"src": "1468:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$194",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 264,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 263,
																"name": "IERC721",
																"nameLocations": [
																	"1468:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 194,
																"src": "1468:7:3"
															},
															"referencedDeclaration": 194,
															"src": "1468:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$194",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"arguments": [
														{
															"id": 267,
															"name": "erc721TokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "1498:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "IERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1490:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721_$194_$",
															"typeString": "type(contract IERC721)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1490:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$194",
														"typeString": "contract IERC721"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1468:49:3"
											},
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "erc20TransferSuccessful",
														"nameLocation": "1543:23:3",
														"nodeType": "VariableDeclaration",
														"scope": 294,
														"src": "1538:28:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 270,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1538:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 274,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1593:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1597:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1593:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 276,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "1605:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "1613:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 272,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "1569:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1580:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "1569:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1569:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1538:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 281,
															"name": "erc20TransferSuccessful",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "1638:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433230207472616e73666572206e6f74207375636365737366756c2e2052656d656d626572207468617420796f75206d75737420686176652073756666696369656e742066756e647320616e64206d616b6520746865206d696e696d756d20616c6c6f77616e636520666f7220746865207072696365206f66207468697320636f6e74726163742e",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1663:140:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222",
																"typeString": "literal_string \"ERC20 transfer not successful. Remember that you must have sufficient funds and make the minimum allowance for the price of this contract.\""
															},
															"value": "ERC20 transfer not successful. Remember that you must have sufficient funds and make the minimum allowance for the price of this contract."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_945dc8daf699ddea46309c5b6592006426fdaaefdf778967c4187932f8ccc222",
																"typeString": "literal_string \"ERC20 transfer not successful. Remember that you must have sufficient funds and make the minimum allowance for the price of this contract.\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1630:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1630:174:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "1630:174:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 288,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "1842:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 289,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1850:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1854:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1850:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "erc721TokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "1862:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 285,
															"name": "erc721Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1817:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$194",
																"typeString": "contract IERC721"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1829:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 159,
														"src": "1817:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1817:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "1817:59:3"
											}
										]
									},
									"functionSelector": "e0c70b66",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeTrade",
									"nameLocation": "1379:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1391:2:3"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1401:0:3"
									},
									"scope": 296,
									"src": "1370:514:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 297,
							"src": "680:1207:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "532:1355:3"
				},
				"id": 3
			}
		}
	}
}